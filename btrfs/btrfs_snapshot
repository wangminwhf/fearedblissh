#!/bin/bash

# Copyright 2013-2017 Jonathan Vasquez <jon@xyinn.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Description: Takes a btrfs snapshot starting from a top-level dataset and organizes the snapshots by date

# params : btrfs_snapshot <path to root of btrfs volume dataset>
# example: btrfs_snapshot /mnt/toplevel/tank

if [[ -z $1 ]]; then
    echo "Please pass in the location of the top-level dataset/subvolume."
    exit 1
fi

BTRFS="/sbin/btrfs"
BTRFS_OPTS="-r"

# strip last / char if exists (otherwise would cause pool_name to be null if user passes a directory with a final /)
STRIPPED="${1%/}"
POOL_NAME="${STRIPPED##*/}"
TOP_LEVEL="${1%/*}"

SNAPSHOT_DATE=$(date +%F-%H%M-%S)
SNAPSHOTS_DIR_NAME="snapshots"

POOL_TOP_LEVEL="${TOP_LEVEL}/${POOL_NAME}"

if [[ ! -d ${POOL_TOP_LEVEL} ]]; then
    echo "Unable to find: ${POOL_TOP_LEVEL}"
    exit 1
fi

for target in $(ls ${POOL_TOP_LEVEL}); do
    if [[ ${target} == "snapshots" ]]; then
        break
    fi

    SOURCE_PATH="${POOL_TOP_LEVEL}/${target}"
    TARGET_PATH="${POOL_TOP_LEVEL}/${SNAPSHOTS_DIR_NAME}/${SNAPSHOT_DATE}/${target}"
    SNAPSHOT_DIR="$(dirname ${TARGET_PATH})"

    if [[ ! -d ${SNAPSHOT_DIR} ]]; then
        mkdir -p "${SNAPSHOT_DIR}"

        if [[ ! -d ${SNAPSHOT_DIR} ]]; then
            echo "Unable to create the snapshot directory: ${SNAPSHOT_DIR}"
            exit 1
        fi
    fi

    ${BTRFS} subvolume snapshot ${BTRFS_OPTS} ${SOURCE_PATH} ${TARGET_PATH}
done
