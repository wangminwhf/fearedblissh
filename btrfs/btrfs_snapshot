#!/bin/bash

# Copyright 2013-2017 Jonathan Vasquez <jon@xyinn.org>
# 
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Description: Takes a btrfs snapshot starting from a top-level dataset and organizes the snapshots by date

# params : btrfs_snapshot <path to root of btrfs volume dataset>
# example: btrfs_snapshot /mnt/toplevel/tank

if [[ -z $1 ]]; then
    echo "Please pass in the location of the top-level dataset/subvolume."
    exit 1
fi

BTRFS="/sbin/btrfs"
BTRFS_OPTS="-r"

# strip last / char if exists (otherwise would cause pool_name to be null if user passes a directory with a final /)
STRIPPED="${1%/}"
POOL_NAME="${STRIPPED##*/}"
TOP_LEVEL="${1%/*}"

SNAPSHOT_DATE=$(date +%F-%H%M-%S)
SNAPSHOTS_DIR_NAME="snapshots"

POOL_TOP_LEVEL="${TOP_LEVEL}/${POOL_NAME}"

if [[ ! -d ${POOL_TOP_LEVEL} ]]; then
    echo "Unable to find: ${POOL_TOP_LEVEL}"
    exit 1
fi

for target in $(ls ${POOL_TOP_LEVEL}); do
    if [[ ${target} == "snapshots" ]]; then
        break
    fi

    SOURCE_PATH="${POOL_TOP_LEVEL}/${target}"
    TARGET_PATH="${POOL_TOP_LEVEL}/${SNAPSHOTS_DIR_NAME}/${SNAPSHOT_DATE}/${target}"
    SNAPSHOT_DIR="$(dirname ${TARGET_PATH})"

    if [[ ! -d ${SNAPSHOT_DIR} ]]; then
        mkdir -p "${SNAPSHOT_DIR}"

        if [[ ! -d ${SNAPSHOT_DIR} ]]; then
            echo "Unable to create the snapshot directory: ${SNAPSHOT_DIR}"
            exit 1
        fi
    fi

    ${BTRFS} subvolume snapshot ${BTRFS_OPTS} ${SOURCE_PATH} ${TARGET_PATH}
done
