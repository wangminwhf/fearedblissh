zfs_snapshot takes a snapshot only of the datasets that it is given.
This allows you to have maximum control of what specific datasets
you want to backup.

An example of backing up a few datasets in a pool:

# zfs_snapshot tank/gentoo/root tank/gentoo/home ...

You can automate this by using a wrapper script that is called via cronjob.
You can use the 'tank_snapshot' wrapper script as a base for your datasets backups.
The 'tank' in 'tank_snapshot' is the name of my pool. I just named it this to make it
simply to identify which pool will be snapshotted.

----------

clean_snapshots - This script automatically cleans any dataset that is older than 30 days,
or older than the date passed to it (if given).

Example:

clean_snapshots -p tank -t zfs

Will find any snapshot older than 30 days (from today) for the tank pool, and then it will
show you the snapshots that it will delete, and ask for confirmation.

If you want to specify a date, you can use the '-d' flag.

Example:

clean_snapshots -p tank -t zfs -d 2014-06-09

Any snapshot older than June 9, 2014 will be removed. This allows for an easy way to delete all the snapshots
in one go. Let's say that today is June 9, 2014, and you want to delete your already existing 350 snapshots
(that were created with zfs_snapshot beforehand), you could just set the date to something in the future
(like next year):

zfs:
clean_snapshots -p tank -t zfs -d 2015-06-09

btrfs:
clean_snapshots -p /mnt/toplevel/tank -t btrfs -d 2015-06-09

Then since every snapshot is older than 2015, it will mark all of them for deletion.

If you want to run this in a cronjob and don't want it to ask for confirmation, you can use the "-f" flag:

Example:

clean_snapshots -f -p tank -t zfs (-d <date> if you want to)

----------

zfs_backup - this script automates the process of performing full and incremental backups
between two pools. When doing an incremental backup, the script automatically finds a common
link between the source and backup pool, and uses that to perform the incremental backup.

Example:

zfs_backup -b backup -d tank/gentoo/root

Will retrieve all the snapshots in both the "backup" and "tank" pools and attempt to do either a full backup or incremental backup.
A full backup will only happen if the backup pool has no snapshots. If snapshots are found, it will only attempt to do an incremental backup.

You can use the "-f" flag to let the script know not to ask you about starting the backup (used for automation)

----------

btrfs layout for snapshots and cleaning:

The snapshot script will snapshot each directory it finds in the 'tank' folder
that's inside /mnt/toplevel (the 'snapshots' directory will be excluded).

Assume you mounted /dev/sda1 (your btrfs volume) at /mnt/toplevel and then you make a subvolume called 'tank'
in that directory (so /mnt/toplevel/tank is your "top level subvolume"):

tank <------ Considering this a top level subvolume (dataset) inside the btrfs volume for organization purposes.
tank/root <--- Operating System /
tank/home <--- /home
tank/snapshots <--- Snapshots subvolume (organized by dates: i.e: tank/snapshots/2015-03-28-1838-01/{tank, root, etc}

Note: The 'snapshots' directory/subvolume will not be snapshotted again (It will be excluded when the algorithm finds it).
